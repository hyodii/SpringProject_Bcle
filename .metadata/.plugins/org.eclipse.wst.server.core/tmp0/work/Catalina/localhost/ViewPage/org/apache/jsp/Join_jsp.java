/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.54
 * Generated at: 2021-12-20 06:17:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Join_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1639549998000L));
    _jspx_dependants.put("jar:file:/C:/Bcle/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ViewPage/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

    request.setCharacterEncoding("UTF-8");
    String cp = request.getContextPath();

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Join.jsp</title>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/bootstrap.css\" />\r\n");
      out.write("<script type=\"text/javascript\" src=\"http://code.jquery.com/jquery.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/bootstrap.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("/* .outer {\r\n");
      out.write("  display: flex;\r\n");
      out.write("  align-items: center; \r\n");
      out.write("  flex-direction: row; \r\n");
      out.write("  justify-content: center; \r\n");
      out.write("}\r\n");
      out.write(".inner {\r\n");
      out.write("  position: absolute;\r\n");
      out.write("  top: 50%;\r\n");
      out.write("  left: 50%;\r\n");
      out.write("  transform: translate(-50%,-50%);\r\n");
      out.write("} */\r\n");
      out.write("\r\n");
      out.write(".outer\r\n");
      out.write("{\r\n");
      out.write("\tborder: 1px solid #ccc;\r\n");
      out.write("\tborder-radius: 5px;\r\n");
      out.write("\twidth: 100vh;\r\n");
      out.write("\tpadding: 50px;\r\n");
      out.write("\tmargin: 5vh 50vh;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<!-- \r\n");
      out.write(" - 회원가입하기 페이지\r\n");
      out.write(" -->\r\n");
      out.write("<div>\r\n");
      out.write("<!-- nav 영역 -->\r\n");
      out.write("<div>\r\n");
      out.write("\t");
      if (_jspx_meth_c_005fimport_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"subheader\">\r\n");
      out.write("\t\t<p>B:CLE</p>\r\n");
      out.write("\t\t<p class=\"title\">회원가입 하기</p>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"outer\">\r\n");
      out.write("\t<!-- <div class=\"inner\"> -->\r\n");
      out.write("\t\t<div class=\"row register-form\">\r\n");
      out.write("\t\t<form action=\"\">\r\n");
      out.write("\t\t\t<div class=\"form-group col-md-12 col-sm-12\">  \r\n");
      out.write("\t\t\t\t프로필 사진*<br>\r\n");
      out.write("\t\t\t\t<input type=\"file\" value=\"등록\" required=\"required\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<br>\r\n");
      out.write("\t\t\t<div class=\"form-group col-md-6 col-sm-6\">\r\n");
      out.write("\t\t\t\t<label for=\"name\">이름*</label>\r\n");
      out.write("\t\t\t\t<input type=\"password\" id=\"name\" placeholder=\"이름을 입력하세요.\" required=\"required\" class=\"form-control\"/>\r\n");
      out.write("\t\t\t\t<span id=\"err\" style=\"display: none; color: red; font-size: small;\">이름을 입력해주세요.</span><br>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"id form-group col-md-6 col-sm-6\">\r\n");
      out.write("\t\t\t\t<label for=\"userId\">아이디*\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" id=\"userId\" placeholder=\"아이디를 입력하세요.\" required=\"required\" class=\"form-control\"/>\r\n");
      out.write("\t\t\t\t\t<input type=\"button\" value=\"중복확인\">\r\n");
      out.write("\t\t\t\t\t<span id=\"err\" style=\"display: none; color: red; font-size: small;\">아이디를 입력해주세요.</span><br>\r\n");
      out.write("\t\t\t\t\t<span id=\"err\" style=\"display: none; color: red; font-size: small;\">다른 아이디를 사용하세요.</span><br>\r\n");
      out.write("\t\t\t\t</label>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"form-group col-md-6 col-sm-6\">\r\n");
      out.write("\t\t\t\t<label for=\"email\">이메일*</label>\r\n");
      out.write("\t\t\t\t<input type=\"email\" id=\"email\" placeholder=\"이메일을 입력하세요.\" required=\"required\" class=\"form-control\"/>\r\n");
      out.write("\t\t\t\t<input type=\"button\" value=\"인증\"><br>\r\n");
      out.write("\t\t\t\t<span id=\"err\" style=\"display: none; color: red; font-size: small;\">이메일을 입력해주세요.</span><br>\r\n");
      out.write("\t\t\t\t<span id=\"err\" style=\"display: none; color: red; font-size: small;\">인증코드가 일치하지 않습니다.</span><br>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"form-group col-md-6 col-sm-6\">\r\n");
      out.write("\t\t\t\t<label for=\"pwd\">비밀번호*</label>\r\n");
      out.write("\t\t\t\t<input type=\"password\" id=\"pwd\" placeholder=\"패스워드를 입력하세요.\" required=\"required\" class=\"form-control\"/>\r\n");
      out.write("\t\t\t\t<span id=\"err\" style=\"display: none; color: red; font-size: small;\">비밀번호를 입력해주세요.</span><br>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"form-group col-md-6 col-sm-6\">\r\n");
      out.write("\t\t\t\t<label for=\"pwd2\">비밀번호 재확인*</label>\r\n");
      out.write("\t\t\t\t<input type=\"password\" id=\"pwd2\" placeholder=\"패스워드를 다시 입력하세요.\" required=\"required\" class=\"form-control\"/>\r\n");
      out.write("\t\t\t\t<span id=\"err\" style=\"display: none; color: red; font-size: small;\">비밀번호를 한번 더입력해주세요.</span><br>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"form-group col-md-12 col-sm-12\">\r\n");
      out.write("\t\t\t\t<label for=\"ssn\">주민번호*</label>\r\n");
      out.write("\t\t\t\t<!-- <input type=\"text\" id=\"ssn\" required=\"required\" class=\"form-control\" placeholder=\"000000-0000000 형식으로 입력해주세요.\"> -->\r\n");
      out.write("\t\t\t\t<input type=\"text\" id=\"ssn\" required=\"required\"> - <input type=\"text\" id=\"ssn2\" required=\"required\">\r\n");
      out.write("\t\t\t\t<input type=\"button\" value=\"본인인증\"><br>\r\n");
      out.write("\t\t\t\t<span id=\"err\" style=\"display: none; color: red; font-size: small;\">주민번호를 입력해주세요.</span><br>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"form-group col-md-6 col-sm-6\">\r\n");
      out.write("\t\t\t\t<label for=\"tel\">연락처*</label>\r\n");
      out.write("\t\t\t\t<input type=\"tel\" id=\"tel\" required=\"required\" class=\"form-control\" placeholder=\"010-0000-0000 형식으로 입력해주세요.\">\r\n");
      out.write("\t\t\t\t<!-- <input type=\"tel\" id=\"tel1\" required=\"required\" style=\"width: 100px\"> - <input type=\"tel\" id=\"tel2\" required=\"required\" style=\"width: 100px\"> - <input type=\"tel\" id=\"tel3\" required=\"required\" style=\"width: 100px\"><br> -->\r\n");
      out.write("\t\t\t\t<span id=\"err\" style=\"display: none; color: red; font-size: small;\">전화번호를 입력해주세요.</span><br>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"form-group col-md-6 col-sm-6\">\r\n");
      out.write("\t\t\t\t<label for=\"nickName\">닉네임*</label>\r\n");
      out.write("\t\t\t\t<input type=\"text\" id=\"nickName\" required=\"required\" class=\"form-control\"><input type=\"button\" value=\"중복확인\"><input type=\"button\" value=\"랜덤생성\">\r\n");
      out.write("\t\t\t\t<span id=\"err\" style=\"display: none; color: red; font-size: small;\">닉네임을 입력해주세요.</span><br>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<br>\r\n");
      out.write("\t\t\t<div class=\"form-group col-md-6 col-sm-6\">\r\n");
      out.write("\t\t\t\t<label for=\"nickName\">지역설정*</label>\r\n");
      out.write("\t\t\t\t<span id=\"err\" style=\"display: none; color: red; font-size: small;\">지역은 최소 1개 설정해야합니다.</span><br>\r\n");
      out.write("\t\t\t\t시 \r\n");
      out.write("\t\t\t\t<select name=\"regionL\" id=\"regionL\" required=\"required\" class=\"form-control\">\r\n");
      out.write("\t\t\t\t\t<option value=\"0\">시 단위</option>\r\n");
      out.write("\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t군·구\r\n");
      out.write("\t\t\t\t<select name=\"regionS\" id=\"regionS\" required=\"required\" class=\"form-control\">\r\n");
      out.write("\t\t\t\t\t<option value=\"0\">군·구 단위</option>\r\n");
      out.write("\t\t\t\t</select><br>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t<input type=\"text\" placeholder=\"지역1\" required=\"required\">\r\n");
      out.write("\t\t\t\t<input type=\"text\" placeholder=\"지역2\">\r\n");
      out.write("\t\t\t\t<input type=\"text\" placeholder=\"지역3\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<br>\r\n");
      out.write("\t\t\t<div class=\"form-group col-md-6 col-sm-6\">\r\n");
      out.write("\t\t\t\t<label for=\"category\">관심카테고리*</label>\r\n");
      out.write("\t\t\t\t<span id=\"err\" style=\"display: none; color: red; font-size: small;\">관심카테고리는 최소 1개 설정해야합니다.</span><br>\r\n");
      out.write("\t\t\t\t<select name=\"category\" id=\"category\" required=\"required\" class=\"form-control\">\r\n");
      out.write("\t\t\t\t\t<option value=\"0\">카테고리 선택</option>\r\n");
      out.write("\t\t\t\t</select><br>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t<input type=\"text\" placeholder=\"카테고리1\" required=\"required\">\r\n");
      out.write("\t\t\t\t<input type=\"text\" placeholder=\"카테고리2\">\r\n");
      out.write("\t\t\t\t<input type=\"text\" placeholder=\"카테고리3\">\r\n");
      out.write("\t\t\t\t<input type=\"text\" placeholder=\"카테고리4\">\r\n");
      out.write("\t\t\t\t<input type=\"text\" placeholder=\"카테고리5\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"form-group col-md-12 col-sm-12\" style=\"text-align: center;\">\r\n");
      out.write("\t\t\t\t<span id=\"err\" style=\"display: none; color: red; font-size: small;\">회원가입의 항목들을 모두 입력해주세요.</span><br>\r\n");
      out.write("\t\t\t\t<input type=\"button\" value=\"가입하기\" class=\"btn btn-warning\">\r\n");
      out.write("\t\t\t\t<!-- <input type=\"reset\" value=\"모두 지우기\" class=\"btn btn-warning\"> -->\r\n");
      out.write("\t\t\t\t<input type=\"button\" value=\"취소\" class=\"btn btn-warning\"\r\n");
      out.write("\t\t\t\tonclick=\"javascript:location.href='");
      out.print(cp);
      out.write("/LoginPage.jsp'\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t<!-- </div> -->\r\n");
      out.write("\t\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\t<div>\r\n");
      out.write("\t\t");
      if (_jspx_meth_c_005fimport_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fimport_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:import
    org.apache.taglibs.standard.tag.rt.core.ImportTag _jspx_th_c_005fimport_005f0 = (org.apache.taglibs.standard.tag.rt.core.ImportTag) _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.ImportTag.class);
    boolean _jspx_th_c_005fimport_005f0_reused = false;
    try {
      _jspx_th_c_005fimport_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fimport_005f0.setParent(null);
      // /Join.jsp(50,1) name = url type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fimport_005f0.setUrl("subHeader.jsp");
      int[] _jspx_push_body_count_c_005fimport_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fimport_005f0 = _jspx_th_c_005fimport_005f0.doStartTag();
        if (_jspx_th_c_005fimport_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fimport_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fimport_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fimport_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.reuse(_jspx_th_c_005fimport_005f0);
      _jspx_th_c_005fimport_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fimport_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fimport_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fimport_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:import
    org.apache.taglibs.standard.tag.rt.core.ImportTag _jspx_th_c_005fimport_005f1 = (org.apache.taglibs.standard.tag.rt.core.ImportTag) _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.ImportTag.class);
    boolean _jspx_th_c_005fimport_005f1_reused = false;
    try {
      _jspx_th_c_005fimport_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fimport_005f1.setParent(null);
      // /Join.jsp(162,2) name = url type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fimport_005f1.setUrl("footer.jsp");
      int[] _jspx_push_body_count_c_005fimport_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fimport_005f1 = _jspx_th_c_005fimport_005f1.doStartTag();
        if (_jspx_th_c_005fimport_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fimport_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fimport_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fimport_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.reuse(_jspx_th_c_005fimport_005f1);
      _jspx_th_c_005fimport_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fimport_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fimport_005f1_reused);
    }
    return false;
  }
}
