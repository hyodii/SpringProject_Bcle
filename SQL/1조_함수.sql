--● 함수

-- 동아리 회원목록 ID로 회원이름 반환하는 함수                                                                                    -----1215
CREATE OR REPLACE FUNCTION FN_CLUBMEMBER_NAME(V_CLUBMEM_ID  VARCHAR2)
RETURN VARCHAR2
IS
    V_NAME         MEMBERINFO.NAME%TYPE;
BEGIN
            
    SELECT F.NAME INTO V_NAME
    FROM MEMBER M JOIN MEMBERINFO F
    ON M.MID = F.MID
        LEFT JOIN JOIN_CLUB JC
        ON JC.MID = M.MID
            LEFT JOIN CLUBMEMBERLIST C
            ON C.JOIN_ID = JC.JOIN_ID
                WHERE C.CLUBMEM_ID = V_CLUBMEM_ID;
                
    RETURN V_NAME;
END;
--==>> Function FN_CLUBMEMBER_NAME이(가) 컴파일되었습니다.

-- 동아리 회원목록 ID로 회원 닉네임 반환하는 함수                                                                                    -----1215
CREATE OR REPLACE FUNCTION FN_CLUBMEMBER_NICKNAME(V_CLUBMEM_ID  VARCHAR2)
RETURN VARCHAR2
IS
    V_NICKNAME         MEMBERINFO.NICKNAME%TYPE;
BEGIN
            
    SELECT F.NICKNAME INTO V_NICKNAME
    FROM MEMBER M JOIN MEMBERINFO F
    ON M.MID = F.MID
        LEFT JOIN JOIN_CLUB JC
        ON JC.MID = M.MID
            LEFT JOIN CLUBMEMBERLIST C
            ON C.JOIN_ID = JC.JOIN_ID
                WHERE C.CLUBMEM_ID = V_CLUBMEM_ID;
                
    RETURN V_NICKNAME;
END;
--==>> Function FN_CLUBMEMBER_NICKNAME이(가) 컴파일되었습니다.



-- 모임 ID로 모임 종류명 반환하는 함수
CREATE OR REPLACE FUNCTION FN_CLUB_NAME(V_CLUBMEM_ID  VARCHAR2)
RETURN VARCHAR2
IS
    V_TITLE         CLUB.TITLE%TYPE;
BEGIN
    SELECT C.TITLE INTO V_TITLE
    FROM CLUB C LEFT JOIN JOIN_CLUB J -- 동아리 + 가입 신청
    ON C.CID = J.CID
        LEFT JOIN CLUBMEMBERLIST L    -- 동아리 + 가입 신청 + 동아리 회원목록
        ON J.JOIN_ID = L.JOIN_ID
            WHERE L.CLUBMEM_ID = V_CLUBMEM_ID;

    RETURN V_TITLE;
END;

--○ 동아리장 회원MID 넣으면 나이제한 MIN 나오는 함수
-- 20세 미만이면 20으로 나온다.

CREATE OR REPLACE FUNCTION FN_CLUB_MINAGE(V_MID VARCHAR2)
RETURN VARCHAR2
IS
    V_MINAGE         NUMBER;
BEGIN
    
    SELECT EXTRACT(YEAR FROM SYSDATE) - (DECODE(SUBSTR(I.SSN,7,1),'1', '19','2','19','20') 
              || SUBSTR(I.SSN,1,2)) +1 INTO V_MINAGE
    FROM MEMBER M LEFT JOIN MEMBERINFO I
        ON M.MID = I.MID
    WHERE M.MID = V_MID;
    
    V_MINAGE := V_MINAGE - 10;
    
    IF(V_MINAGE < 20)
        THEN V_MINAGE := 20;
    END IF;
    
    RETURN V_MINAGE;
END;

SELECT FN_CLUB_MINAGE(CID,MID)
FROM CLUB;

--○ 동아리장 회원MID 넣으면 나이제한 MAX 나오는 함수
CREATE OR REPLACE FUNCTION FN_CLUB_MAXAGE(V_MID VARCHAR2)
RETURN VARCHAR2
IS
    V_MAXAGE         NUMBER;
BEGIN
    SELECT EXTRACT(YEAR FROM SYSDATE) - (DECODE(SUBSTR(I.SSN,7,1),'1', '19','2','19','20') 
              || SUBSTR(I.SSN,1,2)) +1 INTO V_MAXAGE
    FROM MEMBER M LEFT JOIN MEMBERINFO I
        ON I.MID = M.MID
    WHERE M.MID = V_MID;
    
    V_MAXAGE := V_MAXAGE + 10;
    
    RETURN V_MAXAGE;
END;

--○ 회원MID 넣으면 닉네임 나오는 함수 
CREATE OR REPLACE FUNCTION FN_MEMBER_NICKNAME(V_MID VARCHAR2)
RETURN VARCHAR2
IS
    V_NICKNAME         MEMBERINFO.NICKNAME%TYPE;
BEGIN
    
    SELECT I.NICKNAME INTO V_NICKNAME
    FROM MEMBER M LEFT JOIN MEMBERINFO I
        ON M.MID = I.MID
    WHERE M.MID = V_MID;
    
    RETURN V_NICKNAME;
END;

SELECT FN_MEMBER_NICKNAME(MID)
FROM CLUB;


--○ 동아리회원ID(CLUBMEM_ID) 넣으면 닉네임 나오는 함수
-- 이름 나오게 하는건 바꿔서 만들어 사용할 것
CREATE OR REPLACE FUNCTION FN_CLUBMEM_NICKNAME(V_CLUBMEM_ID VARCHAR2)
RETURN VARCHAR2
IS
    V_NICKNAME         MEMBERINFO.NICKNAME%TYPE;
BEGIN
    
    SELECT I.NICKNAME INTO V_NICKNAME
    FROM CLUBMEMBERLIST C LEFT JOIN JOIN_CLUB J
        ON C.JOIN_ID = J.JOIN_ID
        LEFT JOIN MEMBER M 
        ON J.MID = M.MID
        LEFT JOIN MEMBERINFO I 
        ON M.MID = I.MID
    WHERE C.CLUBMEM_ID = V_CLUBMEM_ID;
    
    RETURN V_NICKNAME;
END;

--○ 동아리에 활동회원 몇명 있는지 CID 넣으면 나오는 함수
--강퇴 목록에 없고, 탈퇴 목록에도 없는 현재 활동중인 동아리원의 수 반환 
CREATE OR REPLACE FUNCTION FN_CLUB_MEMBERCOUNT(V_CID VARCHAR2)
RETURN VARCHAR2
IS
    V_MEMBERCOUNT         NUMBER;
BEGIN
    
    SELECT COUNT(*) INTO V_MEMBERCOUNT
    FROM JOIN_CLUB J LEFT JOIN CLUBMEMBERLIST C
        ON J.JOIN_ID = C.JOIN_ID
        LEFT JOIN BAN_MEM_LIST B
        ON C.CLUBMEM_ID = B.CLUBMEM_ID
        LEFT JOIN DROP_CLUB D
        ON C.CLUBMEM_ID = D.CLUBMEM_ID
    WHERE CID= V_CID
    AND BAN_MEM_ID IS NULL    --강퇴회원목록 테이블에 없고
    AND DROPCLUB_ID IS NULL; --탈퇴회원 목록에 없고

    RETURN V_MEMBERCOUNT;
END;

-- 관심 카테고리 이름 반환
CREATE OR REPLACE FUNCTION FN_CATEGORY_NAME(V_MID  VARCHAR2)
RETURN VARCHAR2
IS
    V_S_CAT         CATEGORY_S.S_CAT%TYPE;
BEGIN
    SELECT S.S_CAT INTO V_S_CAT
    FROM MEMBER M, CATEGORY_S S
    WHERE MID = V_MID AND M.CATEGORY_S_ID = S.CATEGORY_S_ID;

    RETURN V_S_CAT;
END;
--==>> Function FN_CATEGORY_NAME이(가) 컴파일되었습니다.

-- 추가 카테고리가 1개면 첫 번째 값 반환
CREATE OR REPLACE FUNCTION FN_ADD_CATEGORY_NAME1(V_MID  VARCHAR2)
RETURN VARCHAR2
IS
    V_S_CAT         CATEGORY_S.S_CAT%TYPE;
BEGIN
    SELECT T.S_CAT INTO V_S_CAT
    FROM
    (
        SELECT ROWNUM "R", S_CAT "S_CAT"
        FROM ADD_CATEGORY A, CATEGORY_S S
        WHERE MID = V_MID AND A.CATEGORY_S_ID = S.CATEGORY_S_ID
    ) T
    WHERE T.R = 1;

    RETURN V_S_CAT;
END;

-- 추가 카테고리가 2개면 첫 번째 값 반환
CREATE OR REPLACE FUNCTION FN_ADD_CATEGORY_NAME2(V_MID  VARCHAR2)
RETURN VARCHAR2
IS
    V_S_CAT         CATEGORY_S.S_CAT%TYPE;
BEGIN
    SELECT T.S_CAT INTO V_S_CAT
    FROM
    (
        SELECT ROWNUM "R", S_CAT "S_CAT"
        FROM ADD_CATEGORY A, CATEGORY_S S
        WHERE MID = V_MID AND A.CATEGORY_S_ID = S.CATEGORY_S_ID
    ) T
    WHERE T.R = 2;

    RETURN V_S_CAT;
END;

-- 추가 카테고리가 3개면 첫 번째 값 반환
CREATE OR REPLACE FUNCTION FN_ADD_CATEGORY_NAME3(V_MID  VARCHAR2)
RETURN VARCHAR2
IS
    V_S_CAT         CATEGORY_S.S_CAT%TYPE;
BEGIN
    SELECT T.S_CAT INTO V_S_CAT
    FROM
    (
        SELECT ROWNUM "R", S_CAT "S_CAT"
        FROM ADD_CATEGORY A, CATEGORY_S S
        WHERE MID = V_MID AND A.CATEGORY_S_ID = S.CATEGORY_S_ID
    ) T
    WHERE T.R = 3;

    RETURN V_S_CAT;
END;

-- 추가 카테고리가 4개면 첫 번째 값 반환
CREATE OR REPLACE FUNCTION FN_ADD_CATEGORY_NAME4(V_MID  VARCHAR2)
RETURN VARCHAR2
IS
    V_S_CAT         CATEGORY_S.S_CAT%TYPE;
BEGIN
    SELECT T.S_CAT INTO V_S_CAT
    FROM
    (
        SELECT ROWNUM "R", S_CAT "S_CAT"
        FROM ADD_CATEGORY A, CATEGORY_S S
        WHERE MID = V_MID AND A.CATEGORY_S_ID = S.CATEGORY_S_ID
    ) T
    WHERE T.R = 4;

    RETURN V_S_CAT;
END;

SELECT 
FROM REGION_S

-- 지역 이름 반환
CREATE OR REPLACE FUNCTION FN_REGION_NAME(V_ID VARCHAR2)
RETURN VARCHAR2
IS
    V_LOCAL         REGION_S.LOCAL%TYPE;
BEGIN
    SELECT S.LOCAL INTO V_LOCAL
    FROM MEMBERINFO MI, REGION_S S
    WHERE ID = V_ID AND MI.REGION_S_ID = S.REGION_S_ID;

    RETURN V_LOCAL;
END;

-- 추가 지역 첫 번째 값 반환
CREATE OR REPLACE FUNCTION FN_ADD_REGION_NAME1(V_ID  VARCHAR2)
RETURN VARCHAR2
IS
    V_LOCAL         REGION_S.LOCAL%TYPE;
BEGIN
    SELECT T.LOCAL INTO V_LOCAL
    FROM
    (
        SELECT ROWNUM "R", LOCAL "LOCAL"
        FROM ADD_REGION A, REGION_S S
        WHERE ID = 'MI1' AND A.REGION_S_ID = S.REGION_S_ID
    ) T
    WHERE T.R = 1;

    RETURN V_LOCAL;
END;

-- 추가 지역 두 번째 값 반환
CREATE OR REPLACE FUNCTION FN_ADD_REGION_NAME2(V_ID  VARCHAR2)
RETURN VARCHAR2
IS
    V_LOCAL         REGION_S.LOCAL%TYPE;
BEGIN
    SELECT T.LOCAL INTO V_LOCAL
    FROM
    (
        SELECT ROWNUM "R", LOCAL "LOCAL"
        FROM ADD_REGION A, REGION_S S
        WHERE ID = 'MI1' AND A.REGION_S_ID = S.REGION_S_ID
    ) T
    WHERE T.R = 2;

    RETURN V_LOCAL;
END;


-- 찬반 반환 함수
CREATE OR REPLACE FUNCTION FN_PAC_NAME(V_PAC_ID  VARCHAR2)
RETURN VARCHAR2
IS
    V_PAC         P_A_C.PAC%TYPE;
BEGIN
    SELECT PAC INTO V_PAC
    FROM P_A_C
    WHERE PAC_ID = V_PAC_ID;

    RETURN V_PAC;
END;
--==>> Function FN_PAC_NAME이(가) 컴파일되었습니다.



-- 직위 반환 함수
CREATE OR REPLACE FUNCTION FN_POSITION_NAME(V_POSITION_ID  VARCHAR2)
RETURN VARCHAR2
IS
    V_NAME         POSITION.NAME%TYPE;
BEGIN
    SELECT NAME INTO V_NAME
    FROM POSITION
    WHERE POSITION_ID = V_POSITION_ID;

    RETURN V_NAME;
END;
--==>> Function FN_POSITION_NAME이(가) 컴파일되었습니다.



-- 동아리 회원목록 ID로 동아리이름 반환하는 함수
CREATE OR REPLACE FUNCTION FN_CLUB_NAME(V_CLUBMEM_ID  VARCHAR2)
RETURN VARCHAR2
IS
    V_TITLE         CLUB.TITLE%TYPE;
BEGIN
    SELECT C.TITLE INTO V_TITLE
    FROM CLUB C LEFT JOIN JOIN_CLUB J -- 동아리 + 가입 신청
    ON C.CID = J.CID
        LEFT JOIN CLUBMEMBERLIST L    -- 동아리 + 가입 신청 + 동아리 회원목록
        ON J.JOIN_ID = L.JOIN_ID
            WHERE L.CLUBMEM_ID = V_CLUBMEM_ID;

    RETURN V_TITLE;
END;
--==>> Function FN_CLUB_NAME이(가) 컴파일되었습니다.

-- 신고 사유 반환 함수
CREATE OR REPLACE FUNCTION FN_FREE_B_REP_R_NAME(V_REASON_ID  VARCHAR2)
RETURN VARCHAR2
IS
    V_REASON         HANDLE_REASON.REASON%TYPE;
BEGIN
    SELECT REASON INTO V_REASON
    FROM HANDLE_REASON
    WHERE REASON_ID = V_REASON_ID;

    RETURN V_REASON;
END;
